; << Generated by NadLabem >>
; the open source brandejs-to-assembly compiler

cpu 8086
segment code
..start mov  bx, heap
        mov  ds, bx
        mov  es, bx
        mov  bx, stack
        mov  ss, bx
        mov  sp, dno
        mov  bp, sp

        mov  ax, 0               ;x: int = 0 (1)
        mov  word[x], ax
        mov  ax, 0               ;for(i: int = 0, i != 15, i = i + 1){ (3)
        mov  word[i], ax
for     nop
        mov  ax, 15
        push ax
        mov  ax, word[i]
        pop  bx
        cmp  ax, bx
        pushf
        pop  ax
        mov  cl, 6
        shr  ax, cl
        and  ax, 1
        xor  ax, 1
        jz   fout
        mov  ax, 10              ;    if(i == 10) break       ; end at 10 (4)
        push ax
        mov  ax, word[i]
        pop  bx
        cmp  ax, bx
        pushf
        pop  ax
        mov  cl, 6
        shr  ax, cl
        and  ax, 1
        jz   ifout
        jmp  fout

ifout   nop

        mov  ax, 5               ;    if(i == 5) continue     ; skip 5 (5)
        push ax
        mov  ax, word[i]
        pop  bx
        cmp  ax, bx
        pushf
        pop  ax
        mov  cl, 6
        shr  ax, cl
        and  ax, 1
        jz   ifout1
        jmp  finc

ifout1  nop

        mov  ax, word[i]         ;    x = x + i (6)
        push ax
        mov  ax, word[x]
        pop  bx
        add  ax, bx
        mov  word[x], ax

finc    nop
        mov  ax, 1
        push ax
        mov  ax, word[i]
        pop  bx
        add  ax, bx
        mov  word[i], ax
        jmp  for
fout    nop
        mov dx, word[x]          ;$ mov dx, word[{x}]         ; move result to dx (9)
exit:
ok      hlt
error   hlt

segment heap
stack   resw 1024
dno     db   ?

x       resb 2                   ;default
i       resb 2                   ;default