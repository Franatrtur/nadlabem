; << Generated by NadLabem >>
; the open source brandejs-to-assembly compiler

cpu 8086
segment code
..start mov  bx, heap
        mov  ds, bx
        mov  es, bx
        mov  bx, stack
        mov  ss, bx
        mov  sp, dno
        mov  bp, sp

        mov  ax, 5               ;a: int = 5 (lab2.brandejs:1)
        mov  word[a1], ax

        jmp  over
fn:
        push bp                  ;def fn(a: int, b: int) -> void { (lab2.brandejs:3)
        mov  bp, sp
        sub  sp, 0
rtn     mov  sp, bp
        pop  bp
        ret  4
over    nop

        mov  ax, word[a1]        ;    my_name.a + my_name.a (lab.brandejs:6)
        push ax
        mov  ax, word[a1]
        pop  bx
        add  ax, bx
        push ax
        mov  ax, word[a1]        ;    my_name.a, (lab.brandejs:5)
        push ax
        call fn                  ;my_name.fn( (lab.brandejs:4)
exit:
ok      hlt
error   hlt

true    mov  ax, 1
        ret
false   mov  ax, 0
        ret

segment heap
stack   resw 1024
dno     db   ?

a1      resb 2                   ;default