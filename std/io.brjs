def putchar(character: char) -> void {
    $ mov ah, 2     ; Identifikace služby Vypsat jeden bajt na terminál
    $ mov dl, byte[{character}]     ; Bajt, který se má na terminál vypsat
    $ int 0x21      ; resp. int 33 poskytne službu
}

;TODO: do a get_char get_line with a 80 char buffer
def getchar() -> char {
    $ mov ah, 1     ; Identifikace služby Načíst jeden bajt z terminálu
    $ int 0x21      ; resp. int 33 poskytne službu
    return $al
    ; Služba vrací v registru AL načtený bajt. Pokud byl čtením vstup vyčerpán (už nejsou zadané žádné bajty k načtení),
    ; služba nastaví ZF=1 a AL=0. Pokud je předáván bajt v AL, je ZF=0.
    ; podporuje i čtení UNICODE znaků v transformaci UTF-8. Pokud je zadán vícebajtový znak,služba předá jen jeden jeho bajt (více se do AL nevejde).
    ; Dalším int 21h bude předán další bajt téhož znaku. Nedojde ke ztrátě obsahu.
}

def print(str: @char[]) -> void {
    i: int = 0
    character: char = str[0]
    while(character != 0c){
        putchar(character)
        i = i + 1
        character = str[i]
    }
}

def print_dos(str: char[]*) -> void {
    $ mov ah, 9	                ; Identifikace služby Vypsat řetězec bajtů na terminál
    $ mov dx, word[{str}]    ; Offset začátku řetězce v segmentu dle DS
    $ int 0x21                  ; resp. int 33 poskytne službu
}

def println(str: @char[]) -> void {
    print(*str)
    putchar(10c)   ; 13 - CL
    putchar(13c)   ; 10 - RF
}